#include "bitmap_image.hpp"
#include <iostream>
using namespace std;

int diff(int x, int y){
  if(x>y){
    return x-y;
  }
  return y-x;
}

double findCentroids(int row, bitmap_image line, const int lineColour[3], const int colourError, const int COLUMNS){
  int div = 0;
  int total = 0;
  for(int i = 0; i < COLUMNS; i++){
    unsigned char red, green, blue;
    line.get_pixel(i,row,red,green,blue);
    if(diff(red, lineColour[0]) < colourError and diff(green, lineColour[1]) < colourError and diff(blue, lineColour[2]) < colourError){
      int weight = (colourError-diff(red,lineColour[0]))+(colourError-diff(green,lineColour[1]))+(colourError-diff(blue,lineColour[2]));
      div += weight;
      total += weight*i;
    }
  }
  return ((double)total)/div;
}

int main(){
  bitmap_image line("line.bmp");
  const int ROWS = 80;
  const int COLUMNS = 60;
  const int PRECISION = 10;//number of line skips
  const int LINECOLOUR[3] = {0,0,0};
  const int COLOURERROR = 20;
  double centroids[ROWS/PRECISION];
  for(int r = 0; r < ROWS; r+=PRECISION){
    centroids[r/PRECISION] = findCentroids(r, line, LINECOLOUR, COLOURERROR, COLUMNS);
  }
  for(int i = 0; i < ROWS/PRECISION; i++){
    cout << centroids[i] << " ";
  }
  cout << endl;
}
